%YAML 1.1
---
# Keep the includes first to illustrate that definitions that everything that
# follows override included definitions.
include:
  - file: /ci/default.yml
    project: ${CI_PROJECT_NAMESPACE}/CI
    ref: main
  - file: /ci/container.yml
    project: ${CI_PROJECT_NAMESPACE}/CI

variables:
  # Hard-code the container image for bootstrapping to use one that exists
  BOOTSTRAP_IMAGE: registry.gitlab.com/modioab/base-image/fedora-35/container:master

  # Override the default, to dogfood development work, and catch issues early
  CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}/fedora-${FEDORA_ROOT_RELEASE}/container:${CI_COMMIT_REF_NAME}

# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Workflows/MergeRequest-Pipelines.gitlab-ci.yml
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    # Also allow starting manual pipelines on all branches
    - if: '$CI_PIPELINE_SOURCE == "web"'

# The default settings above can be overriden in any of the jobs that follow

.container:build-publish:
  extends:
    - .container:build
  # /CI/container uses a hard-coded image, instead of using the variable as
  # defined in /CI/default, so we can't just override the variable for now.
  # TODO: https://gitlab.com/ModioAB/CI/-/issues/1
  image: ${CONTAINER_IMAGE}
  script:
    - make ${SUBDIR:+--directory=}${SUBDIR} login
    - podman info
    - make ${SUBDIR:+--directory=}${SUBDIR} build
    - make ${SUBDIR:+--directory=}${SUBDIR} publish
    - |
      if [[ $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH ]]
      then
        make ${SUBDIR:+--directory=}${SUBDIR} IMAGE_TAG_SUFFIX=latest publish
      fi

.fedora-release-matrix:
  parallel:
    matrix:
      - &fedora-root-release
        FEDORA_ROOT_RELEASE:
          - 35
          - 36


# Bootstrap can be run by setting FEDORA_ROOT_RELEASE in the variables part
# when running a pipeline manually.
bootstrap:
  extends:
    - .container:build-publish
  stage: prepare
  image: ${BOOTSTRAP_IMAGE}
  variables:
    FEDORA_ROOT_RELEASE: ''
    SUBDIR: bootstrap
  rules:
    - if: '"${FEDORA_ROOT_RELEASE}" != ""'
      when: manual
      allow_failure: true
    - when: never


fedora:build-image:
  extends:
    - .container:build-publish
    - .fedora-release-matrix
  stage: prepare
  image: ${BOOTSTRAP_IMAGE}
  variables:
    SUBDIR: build-fedora


fedora:container:
  extends:
    - .container:build-publish
    - .fedora-release-matrix
  stage: prepare
  image: ${BOOTSTRAP_IMAGE}
  rules:
    - if: '"${CI_COMMIT_BRANCH}" == "${CI_DEFAULT_BRANCH}"'
      allow_failure: true
    - when: always
  script:
    - make --directory=container login
    - podman info
    - make --directory=container build test publish
    - |
      if [[ $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH ]]
      then
        make --directory=container IMAGE_TAG_SUFFIX=latest publish
      fi


fedora:jstest:
  extends:
    - .container:build-publish
    - .fedora-release-matrix
  needs:
    - fedora:container
    - fedora:build-image
  variables:
    BASE_IMAGE_TAG: ${CI_COMMIT_REF_NAME}
    SUBDIR: jstest


fedora:
  extends:
    - .container:build-publish
  needs:
    - fedora:container
  parallel:
    matrix:
      - <<: *fedora-root-release
        SUBDIR:
          - c-image
          - go-image
          - nginx
          - nodejs-image
          - python3-image

      - <<: *fedora-root-release
        SUBDIR:
          - meteor-image
        METEOR_RELEASE:
          - '1.10.1'


other:
  extends:
    - .container:build-publish
  needs:
    - fedora:container
  parallel:
    matrix:
      - SUBDIR:
          - debian9-cross
          - rust
          - rust-cross
...
